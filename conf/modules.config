/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

if (!params.skip_fastqc) {
    process {
        withName: '.*:.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_RAW' {
            ext.args = '--quiet'
            publishDir = [
                path: { "${params.outdir}/fastqc/raw" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }
}

if (!params.skip_fastp) {
    process {
        withName: 'FASTP' {
            ext.args = '--cut_front --cut_tail --trim_poly_x --cut_mean_quality 20 --qualified_quality_phred 20 --unqualified_percent_limit 10 --length_required 100'
            publishDir = [
                [
                    path: { "${params.outdir}/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.{json,html}"
                ],
                [
                    path: { "${params.outdir}/fastp/log" },
                    mode: params.publish_dir_mode,
                    pattern: "*.log"
                ],
                [
                    path: { "${params.outdir}/fastp" },
                    mode: params.publish_dir_mode,
                    pattern: "*.fail.fastq.gz",
                    enabled: params.save_trimmed_fail
                ]
            ]
        }
    }

    if (!params.skip_fastqc) {
        process {
            withName: '.*:.*:FASTQ_TRIM_FASTP_FASTQC:FASTQC_TRIM' {
                ext.args = '--quiet'
                publishDir = [
                    path: { "${params.outdir}/fastqc/trim" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName:'KRAKEN2_KRAKEN2' {
            ext.args = '--report-zero-counts --use-names'
            publishDir = [
                path: { "${params.outdir}/kraken2" },
                mode: params.publish_dir_mode,
                pattern: "*report.txt"
            ]
        }


    withName:'KMA_ALLELES'{
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/kma_alleles" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName:'KMACGMLST_INDEX'{
        ext.args   = ''
        publishDir = [
            path: { "${params.outdir}/kmacgmlst_index" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: KMACGMLST_CALL {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/kmacgmlst_results" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MAKE_18S {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastDB_18S" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MAKE_GP60 {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastDB_gp60" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: RUN_18S {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastResults_18S" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: RUN_GP60 {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastResults_gp60" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SSU_CLASSIFICATION_18S {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastResults_18S/ssu_18S" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CAT_18S {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastResults_18S/ssu_18S/final_results" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SSU_CLASSIFICATION_GP60 {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastResults_gp60/ssu_gp60" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CAT_GP60 {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/blastResults_gp60/ssu_gp60/final_results" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: QUAST {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/quast_assembly" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: EXTRACT_QUAST {
        ext.args   = ''
        publishDir = [
          path: { "${params.outdir}/quast_assembly" },
          mode: params.publish_dir_mode,
          saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

  withName: 'SKESA' {
                publishDir = [
                    [
                        path: { "${params.outdir}/assembly/skesa/" },
                        mode: params.publish_dir_mode,
                        pattern: '*.{fasta.gz}'
                    ]
                ]
            }
 withName: 'UNICYCLER' {
                publishDir = [
                    [
                        path: { "${params.outdir}/assembly/unicycler" },
                        mode: params.publish_dir_mode,
                        pattern: '*.{fa.gz,gfa.gz}'
                    ],
                    [
                        path: { "${params.outdir}/assembly/unicycler/log" },
                        mode: params.publish_dir_mode,
                        pattern: '*.log'
                    ]
                ]
            }



}
